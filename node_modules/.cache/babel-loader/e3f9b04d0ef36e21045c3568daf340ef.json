{"ast":null,"code":"var _jsxFileName = \"/Users/leejaeuk/Dev/playground/numble-1/src/components/GameStatusInfo.tsx\";\nimport * as React from 'react';\nimport { styled } from '../stitches.config';\nimport FormattedItemTypo from './FormattedItemTypo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GameStatusInfo = _ref => {\n  let {\n    stage,\n    score,\n    time\n  } = _ref;\n  const formattedTime = (time / 1000).toFixed(1);\n  const padStage = stage / 10 >= 1 ? stage : `0${stage}`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StageTypo, {\n      children: padStage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormattedItemTypo, {\n        prefix: 'score',\n        seperator: ':',\n        suffix: score,\n        seperatorLeftMargin: 'regular'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormattedItemTypo, {\n        prefix: 'time',\n        seperator: ':',\n        suffix: formattedTime,\n        seperatorLeftMargin: 'large'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = GameStatusInfo;\nexport default GameStatusInfo;\nconst StageTypo = styled('span', {\n  fontFamily: '$default',\n  fontSize: 32,\n  fontWeight: '$2',\n  lineHeight: 1.4,\n  color: '$veryPeri',\n  textTransform: 'uppercase'\n});\n_c2 = StageTypo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GameStatusInfo\");\n$RefreshReg$(_c2, \"StageTypo\");","map":{"version":3,"sources":["/Users/leejaeuk/Dev/playground/numble-1/src/components/GameStatusInfo.tsx"],"names":["React","styled","FormattedItemTypo","GameStatusInfo","stage","score","time","formattedTime","toFixed","padStage","StageTypo","fontFamily","fontSize","fontWeight","lineHeight","color","textTransform"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;;AAQA,MAAMC,cAA6C,GAAG,QAIhD;AAAA,MAJiD;AACrDC,IAAAA,KADqD;AAErDC,IAAAA,KAFqD;AAGrDC,IAAAA;AAHqD,GAIjD;AACJ,QAAMC,aAAa,GAAG,CAACD,IAAI,GAAG,IAAR,EAAcE,OAAd,CAAsB,CAAtB,CAAtB;AACA,QAAMC,QAAQ,GAAIL,KAAK,GAAG,EAAR,IAAc,CAAf,GAAoBA,KAApB,GAA6B,IAAGA,KAAM,EAAvD;AAEA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAA,gBAAYK;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE,QAAC,iBAAD;AACE,QAAA,MAAM,EAAE,OADV;AAEE,QAAA,SAAS,EAAE,GAFb;AAGE,QAAA,MAAM,EAAEJ,KAHV;AAIE,QAAA,mBAAmB,EAAE;AAJvB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,iBAAD;AACE,QAAA,MAAM,EAAE,MADV;AAEE,QAAA,SAAS,EAAE,GAFb;AAGE,QAAA,MAAM,EAAEE,aAHV;AAIE,QAAA,mBAAmB,EAAE;AAJvB;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAmBD,CA3BD;;KAAMJ,c;AA6BN,eAAeA,cAAf;AAEA,MAAMO,SAAS,GAAGT,MAAM,CAAC,MAAD,EAAS;AAC/BU,EAAAA,UAAU,EAAE,UADmB;AAE/BC,EAAAA,QAAQ,EAAE,EAFqB;AAG/BC,EAAAA,UAAU,EAAE,IAHmB;AAI/BC,EAAAA,UAAU,EAAE,GAJmB;AAK/BC,EAAAA,KAAK,EAAE,WALwB;AAM/BC,EAAAA,aAAa,EAAE;AANgB,CAAT,CAAxB;MAAMN,S","sourcesContent":["import * as React from 'react'\nimport { styled } from '../stitches.config';\nimport FormattedItemTypo from './FormattedItemTypo';\n\ninterface GameStatusInfoProps {\n  stage: number;\n  score: number;\n  time: number;\n}\n\nconst GameStatusInfo: React.FC<GameStatusInfoProps> = ({\n  stage,\n  score,\n  time,\n}) => {\n  const formattedTime = (time / 1000).toFixed(1);\n  const padStage = (stage / 10 >= 1) ? stage : `0${stage}`;\n\n  return (\n    <>\n      <StageTypo>{padStage}</StageTypo>\n      <div>\n        <FormattedItemTypo\n          prefix={'score'}\n          seperator={':'}\n          suffix={score}\n          seperatorLeftMargin={'regular'}\n        />\n        <FormattedItemTypo\n          prefix={'time'}\n          seperator={':'}\n          suffix={formattedTime}\n          seperatorLeftMargin={'large'}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default GameStatusInfo;\n\nconst StageTypo = styled('span', {\n  fontFamily: '$default',\n  fontSize: 32,\n  fontWeight: '$2',\n  lineHeight: 1.4,\n  color: '$veryPeri',\n  textTransform: 'uppercase',\n});\n"]},"metadata":{},"sourceType":"module"}