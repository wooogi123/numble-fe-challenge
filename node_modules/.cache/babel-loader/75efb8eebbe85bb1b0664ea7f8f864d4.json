{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport useGameReducer from './useGameReducer';\nimport { useRequestAnimationFrame } from '../../hooks';\n\nconst useGame = () => {\n  _s();\n\n  const [state, dispatch] = useGameReducer();\n  const elapsedTime = React.useRef(0);\n  useRequestAnimationFrame(deltaTime => {\n    if (!state.isStarted) return;\n    if (state.isGameOver) return;\n    if (state.isClear) return;\n    elapsedTime.current += deltaTime;\n\n    if (elapsedTime.current >= 100) {\n      dispatch({\n        type: 'tick',\n        payload: elapsedTime.current\n      });\n      elapsedTime.current = 0;\n    }\n  }, [state]);\n  return {\n    state,\n    dispatch\n  };\n};\n\n_s(useGame, \"YeZOcBj2608RHjz6YLGAH6MfZnA=\", false, function () {\n  return [useGameReducer, useRequestAnimationFrame];\n});\n\nexport default useGame;","map":{"version":3,"sources":["/mnt/c/Users/Akalee/Desktop/work/playground/numble-fe-challenge/src/features/game/useGame.ts"],"names":["React","useGameReducer","useRequestAnimationFrame","useGame","state","dispatch","elapsedTime","useRef","deltaTime","isStarted","isGameOver","isClear","current","type","payload"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,wBAAT,QAAyC,aAAzC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,cAAc,EAAxC;AAEA,QAAMK,WAAW,GAAGN,KAAK,CAACO,MAAN,CAAqB,CAArB,CAApB;AAEAL,EAAAA,wBAAwB,CAAEM,SAAD,IAAe;AACtC,QAAI,CAACJ,KAAK,CAACK,SAAX,EAAsB;AACtB,QAAIL,KAAK,CAACM,UAAV,EAAsB;AACtB,QAAIN,KAAK,CAACO,OAAV,EAAmB;AAEnBL,IAAAA,WAAW,CAACM,OAAZ,IAAuBJ,SAAvB;;AAEA,QAAIF,WAAW,CAACM,OAAZ,IAAuB,GAA3B,EAAgC;AAC9BP,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,OAAO,EAAER,WAAW,CAACM;AAArC,OAAD,CAAR;AACAN,MAAAA,WAAW,CAACM,OAAZ,GAAsB,CAAtB;AACD;AACF,GAXuB,EAWrB,CAACR,KAAD,CAXqB,CAAxB;AAaA,SAAO;AACLA,IAAAA,KADK;AAELC,IAAAA;AAFK,GAAP;AAID,CAtBD;;GAAMF,O;UACsBF,c,EAI1BC,wB;;;AAmBF,eAAeC,OAAf","sourcesContent":["import * as React from 'react';\r\nimport useGameReducer from './useGameReducer';\r\nimport { useRequestAnimationFrame } from '../../hooks';\r\n\r\nconst useGame = () => {\r\n  const [state, dispatch] = useGameReducer();\r\n\r\n  const elapsedTime = React.useRef<number>(0);\r\n\r\n  useRequestAnimationFrame((deltaTime) => {\r\n    if (!state.isStarted) return;\r\n    if (state.isGameOver) return;\r\n    if (state.isClear) return;\r\n\r\n    elapsedTime.current += deltaTime;\r\n\r\n    if (elapsedTime.current >= 100) {\r\n      dispatch({ type: 'tick', payload: elapsedTime.current });\r\n      elapsedTime.current = 0;\r\n    }\r\n  }, [state]);\r\n\r\n  return {\r\n    state,\r\n    dispatch\r\n  };\r\n};\r\n\r\nexport default useGame;\r\n"]},"metadata":{},"sourceType":"module"}