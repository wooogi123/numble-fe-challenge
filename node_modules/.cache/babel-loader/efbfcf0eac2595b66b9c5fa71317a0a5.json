{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Akalee/Desktop/work/playground/numble-fe-challenge/src/features/game/Game.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { GameHeader, GamePlate, GameStart } from '../../components';\nimport Board from './Board';\nimport useGame from './useGame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useGame();\n  const isStarted = React.useMemo(() => state.isStarted, [state]);\n  const isClear = React.useMemo(() => state.isClear, [state]);\n\n  const handleClickStart = () => dispatch({\n    type: 'init'\n  });\n\n  const handleClickAnswer = () => dispatch({\n    type: 'nextStage'\n  });\n\n  const handleClickWrongAnswer = () => dispatch({\n    type: 'deduct'\n  });\n\n  if (!isStarted) {\n    return /*#__PURE__*/_jsxDEV(GamePlate, {\n      children: /*#__PURE__*/_jsxDEV(GameStart, {\n        onClick: handleClickStart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (isClear) {\n    return /*#__PURE__*/_jsxDEV(GamePlate, {\n      children: /*#__PURE__*/_jsxDEV(GameHeader, {\n        stage: state.stage,\n        time: state.remainingTime,\n        score: state.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(GamePlate, {\n    children: [/*#__PURE__*/_jsxDEV(GameHeader, {\n      stage: state.stage,\n      time: state.remainingTime,\n      score: state.score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      stage: state.stage,\n      onClickAnswer: handleClickAnswer,\n      onClickWrongAnswer: handleClickWrongAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"b0iOCRS8M7V+5InhqIWHY2Tt4IQ=\", false, function () {\n  return [useGame];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/mnt/c/Users/Akalee/Desktop/work/playground/numble-fe-challenge/src/features/game/Game.tsx"],"names":["React","GameHeader","GamePlate","GameStart","Board","useGame","Game","state","dispatch","isStarted","useMemo","isClear","handleClickStart","type","handleClickAnswer","handleClickWrongAnswer","stage","remainingTime","score"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,UADF,EAEEC,SAFF,EAGEC,SAHF,QAIO,kBAJP;AAKA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,IAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,OAAO,EAAnC;AAEA,QAAMI,SAAS,GAAGT,KAAK,CAACU,OAAN,CAAc,MAAMH,KAAK,CAACE,SAA1B,EAAqC,CAACF,KAAD,CAArC,CAAlB;AACA,QAAMI,OAAO,GAAGX,KAAK,CAACU,OAAN,CAAc,MAAMH,KAAK,CAACI,OAA1B,EAAmC,CAACJ,KAAD,CAAnC,CAAhB;;AAEA,QAAMK,gBAAgB,GAAG,MAAMJ,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAvC;;AAEA,QAAMC,iBAAiB,GAAG,MAAMN,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAxC;;AAEA,QAAME,sBAAsB,GAAG,MAAMP,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAE;AAAR,GAAD,CAA7C;;AAEA,MAAI,CAACJ,SAAL,EAAgB;AACd,wBACE,QAAC,SAAD;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,OAAO,EAAEG;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAID,OAAJ,EAAa;AACX,wBACE,QAAC,SAAD;AAAA,6BACE,QAAC,UAAD;AACE,QAAA,KAAK,EAAEJ,KAAK,CAACS,KADf;AAEE,QAAA,IAAI,EAAET,KAAK,CAACU,aAFd;AAGE,QAAA,KAAK,EAAEV,KAAK,CAACW;AAHf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAED,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,KAAK,EAAEX,KAAK,CAACS,KADf;AAEE,MAAA,IAAI,EAAET,KAAK,CAACU,aAFd;AAGE,MAAA,KAAK,EAAEV,KAAK,CAACW;AAHf;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,KAAD;AACE,MAAA,KAAK,EAAEX,KAAK,CAACS,KADf;AAEE,MAAA,aAAa,EAAEF,iBAFjB;AAGE,MAAA,kBAAkB,EAAEC;AAHtB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA9CD;;GAAMT,I;UACwBD,O;;;KADxBC,I;AAgDN,eAAeA,IAAf","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  GameHeader,\r\n  GamePlate,\r\n  GameStart,\r\n} from '../../components';\r\nimport Board from './Board';\r\nimport useGame from './useGame';\r\n\r\nconst Game: React.FC = () => {\r\n  const { state, dispatch } = useGame();\r\n\r\n  const isStarted = React.useMemo(() => state.isStarted, [state]);\r\n  const isClear = React.useMemo(() => state.isClear, [state]);\r\n\r\n  const handleClickStart = () => dispatch({ type: 'init' });\r\n\r\n  const handleClickAnswer = () => dispatch({ type: 'nextStage' });\r\n\r\n  const handleClickWrongAnswer = () => dispatch({ type: 'deduct' });\r\n\r\n  if (!isStarted) {\r\n    return (\r\n      <GamePlate>\r\n        <GameStart onClick={handleClickStart} />\r\n      </GamePlate>\r\n    );\r\n  }\r\n\r\n  if (isClear) {\r\n    return (\r\n      <GamePlate>\r\n        <GameHeader\r\n          stage={state.stage}\r\n          time={state.remainingTime}\r\n          score={state.score}\r\n        />\r\n      </GamePlate>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <GamePlate>\r\n      <GameHeader\r\n        stage={state.stage}\r\n        time={state.remainingTime}\r\n        score={state.score}\r\n      />\r\n      <Board\r\n        stage={state.stage}\r\n        onClickAnswer={handleClickAnswer}\r\n        onClickWrongAnswer={handleClickWrongAnswer}\r\n      />\r\n    </GamePlate>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}