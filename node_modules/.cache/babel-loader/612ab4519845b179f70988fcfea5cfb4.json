{"ast":null,"code":"var _jsxFileName = \"/Users/leejaeuk/Dev/playground/numble-1/src/components/GameBoard.tsx\";\nimport * as React from 'react';\nimport { styled } from '../stitches.config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GameBoard = _ref => {\n  let {\n    itemCount,\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Board, {\n    style: {\n      '--count': itemCount\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = GameBoard;\nexport default GameBoard;\nconst Board = styled('div', {\n  width: '100%',\n  aspectRatio: '1/1',\n  display: 'grid',\n  gridTemplate: 'repeat(var(--count), 1fr) / repeat(var(--count), 1fr)',\n  gap: 8\n});\n_c2 = Board;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GameBoard\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"sources":["/Users/leejaeuk/Dev/playground/numble-1/src/components/GameBoard.tsx"],"names":["React","styled","GameBoard","itemCount","children","Board","width","aspectRatio","display","gridTemplate","gap"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,oBAAvB;;;AAMA,MAAMC,SAAmC,GAAG,QAGtC;AAAA,MAHuC;AAC3CC,IAAAA,SAD2C;AAE3CC,IAAAA;AAF2C,GAGvC;AACJ,sBACE,QAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAE,iBAAWD;AAAb,KAAd;AAAA,cACGC;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CATD;;KAAMF,S;AAWN,eAAeA,SAAf;AAEA,MAAMG,KAAK,GAAGJ,MAAM,CAAC,KAAD,EAAQ;AAC1BK,EAAAA,KAAK,EAAE,MADmB;AAE1BC,EAAAA,WAAW,EAAE,KAFa;AAG1BC,EAAAA,OAAO,EAAE,MAHiB;AAI1BC,EAAAA,YAAY,EAAE,uDAJY;AAK1BC,EAAAA,GAAG,EAAE;AALqB,CAAR,CAApB;MAAML,K","sourcesContent":["import * as React from 'react';\nimport { styled } from '../stitches.config';\n\ninterface GameBoardProps {\n  itemCount: number;\n}\n\nconst GameBoard: React.FC<GameBoardProps> = ({\n  itemCount,\n  children,\n}) => {\n  return (\n    <Board style={{ '--count': itemCount } as React.CSSProperties}>\n      {children}\n    </Board>\n  );\n};\n\nexport default GameBoard;\n\nconst Board = styled('div', {\n  width: '100%',\n  aspectRatio: '1/1',\n  display: 'grid',\n  gridTemplate: 'repeat(var(--count), 1fr) / repeat(var(--count), 1fr)',\n  gap: 8,\n});\n"]},"metadata":{},"sourceType":"module"}