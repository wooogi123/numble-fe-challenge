{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Akalee/Desktop/work/playground/numble-fe-challenge/src/features/game/Game.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { GameHeader, GamePlate, GameStart, GameDone } from '../../components';\nimport Board from './Board';\nimport useGame from './useGame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useGame();\n  const isStarted = React.useMemo(() => state.isStarted, [state]);\n  const isClear = React.useMemo(() => state.isClear, [state]);\n  const isGameOver = React.useMemo(() => state.isGameOver, [state]);\n  const handleClickStart = React.useCallback(() => {\n    dispatch({\n      type: 'init'\n    });\n  }, [dispatch]);\n  const handleClickAnswer = React.useCallback(() => {\n    dispatch({\n      type: 'nextStage'\n    });\n  }, [dispatch]);\n  const handleClickWrongAnswer = React.useCallback(() => {\n    dispatch({\n      type: 'deduct'\n    });\n  }, [dispatch]);\n\n  if (!isStarted) {\n    return /*#__PURE__*/_jsxDEV(GamePlate, {\n      children: /*#__PURE__*/_jsxDEV(GameStart, {\n        onClick: handleClickStart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (isClear) {\n    return /*#__PURE__*/_jsxDEV(GamePlate, {\n      children: /*#__PURE__*/_jsxDEV(GameHeader, {\n        stage: state.stage,\n        time: state.remainingTime,\n        score: state.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (isGameOver) {\n    return /*#__PURE__*/_jsxDEV(GamePlate, {\n      children: [/*#__PURE__*/_jsxDEV(GameHeader, {\n        stage: state.stage,\n        time: state.remainingTime,\n        score: state.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GameDone, {\n        onClickRestart: handleClickStart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(GamePlate, {\n    children: [/*#__PURE__*/_jsxDEV(GameHeader, {\n      stage: state.stage,\n      time: state.remainingTime,\n      score: state.score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      stage: state.stage,\n      onClickAnswer: handleClickAnswer,\n      onClickWrongAnswer: handleClickWrongAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"nfzNQb9KY9gUNGkFD35tlZnzF6s=\", false, function () {\n  return [useGame];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/mnt/c/Users/Akalee/Desktop/work/playground/numble-fe-challenge/src/features/game/Game.tsx"],"names":["React","GameHeader","GamePlate","GameStart","GameDone","Board","useGame","Game","state","dispatch","isStarted","useMemo","isClear","isGameOver","handleClickStart","useCallback","type","handleClickAnswer","handleClickWrongAnswer","stage","remainingTime","score"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  GameHeader,\r\n  GamePlate,\r\n  GameStart,\r\n  GameDone,\r\n} from '../../components';\r\nimport Board from './Board';\r\nimport useGame from './useGame';\r\n\r\nconst Game: React.FC = () => {\r\n  const { state, dispatch } = useGame();\r\n\r\n  const isStarted = React.useMemo(() => state.isStarted, [state]);\r\n  const isClear = React.useMemo(() => state.isClear, [state]);\r\n  const isGameOver = React.useMemo(() => state.isGameOver, [state]);\r\n\r\n  const handleClickStart = React.useCallback(() => {\r\n    dispatch({ type: 'init' });\r\n  }, [dispatch]);\r\n\r\n  const handleClickAnswer = React.useCallback(() => {\r\n    dispatch({ type: 'nextStage' });\r\n  }, [dispatch]);\r\n\r\n  const handleClickWrongAnswer = React.useCallback(() => {\r\n    dispatch({ type: 'deduct' });\r\n  }, [dispatch]);\r\n\r\n  if (!isStarted) {\r\n    return (\r\n      <GamePlate>\r\n        <GameStart onClick={handleClickStart} />\r\n      </GamePlate>\r\n    );\r\n  }\r\n\r\n  if (isClear) {\r\n    return (\r\n      <GamePlate>\r\n        <GameHeader\r\n          stage={state.stage}\r\n          time={state.remainingTime}\r\n          score={state.score}\r\n        />\r\n      </GamePlate>\r\n    );\r\n  }\r\n\r\n  if (isGameOver) {\r\n    return (\r\n      <GamePlate>\r\n        <GameHeader\r\n          stage={state.stage}\r\n          time={state.remainingTime}\r\n          score={state.score}\r\n        />\r\n        <GameDone onClickRestart={handleClickStart}/>\r\n      </GamePlate>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <GamePlate>\r\n      <GameHeader\r\n        stage={state.stage}\r\n        time={state.remainingTime}\r\n        score={state.score}\r\n      />\r\n      <Board\r\n        stage={state.stage}\r\n        onClickAnswer={handleClickAnswer}\r\n        onClickWrongAnswer={handleClickWrongAnswer}\r\n      />\r\n    </GamePlate>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}