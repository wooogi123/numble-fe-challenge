{"ast":null,"code":"export const getItemCount = base => Math.pow(Math.round((base + 0.5) / 2) + 1, 2);\nexport const getColor = () => Math.floor(Math.random() * 255);\nexport const getRandomNumber = len => Math.floor(Math.random() * (len - 1));\n\nclass RGBColor {\n  constructor(r, g, b) {\n    this.r = void 0;\n    this.g = void 0;\n    this.b = void 0;\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n\n  toString() {\n    return `rgb(${this.r}, ${this.g}, ${this.b})`;\n  }\n\n}\n\nexport const createColor = () => {\n  const color = new Color(getColor(), getColor(), getColor());\n};\nexport const createGameColors = () => {\n  return {\n    base: createColor(),\n    answer: createColor()\n  };\n};","map":{"version":3,"sources":["/Users/leejaeuk/Dev/playground/numble-1/src/features/game/utils.ts"],"names":["getItemCount","base","Math","pow","round","getColor","floor","random","getRandomNumber","len","RGBColor","constructor","r","g","b","toString","createColor","color","Color","createGameColors","answer"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAIC,IAAD,IAC1BC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,KAAL,CAAW,CAACH,IAAI,GAAG,GAAR,IAAe,CAA1B,IAA+B,CAAxC,EAA2C,CAA3C,CADK;AAGP,OAAO,MAAMI,QAAQ,GAAG,MAAMH,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACK,MAAL,KAAgB,GAA3B,CAAvB;AAEP,OAAO,MAAMC,eAAe,GAAIC,GAAD,IAC7BP,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACK,MAAL,MAAiBE,GAAG,GAAG,CAAvB,CAAX,CADK;;AAGP,MAAMC,QAAN,CAAe;AAKdC,EAAAA,WAAW,CAACC,CAAD,EAAYC,CAAZ,EAAuBC,CAAvB,EAAkC;AAAA,SAJ7CF,CAI6C;AAAA,SAH7CC,CAG6C;AAAA,SAF7CC,CAE6C;AAC5C,SAAKF,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA;;AAEDC,EAAAA,QAAQ,GAAW;AAClB,WAAQ,OAAM,KAAKH,CAAE,KAAI,KAAKC,CAAE,KAAI,KAAKC,CAAE,GAA3C;AACA;;AAba;;AAgBf,OAAO,MAAME,WAAW,GAAG,MAAgB;AAC1C,QAAMC,KAAK,GAAG,IAAIC,KAAJ,CACbb,QAAQ,EADK,EAEbA,QAAQ,EAFK,EAGbA,QAAQ,EAHK,CAAd;AAKA,CANM;AAQP,OAAO,MAAMc,gBAAgB,GAAG,MAG3B;AACJ,SAAO;AACNlB,IAAAA,IAAI,EAAEe,WAAW,EADX;AAENI,IAAAA,MAAM,EAAEJ,WAAW;AAFb,GAAP;AAIA,CARM","sourcesContent":["export const getItemCount = (base: number) =>\n  Math.pow(Math.round((base + 0.5) / 2) + 1, 2);\n\nexport const getColor = () => Math.floor(Math.random() * 255);\n\nexport const getRandomNumber = (len: number) =>\n  Math.floor(Math.random() * (len - 1));\n\nclass RGBColor {\n\tr: number;\n\tg: number;\n\tb: number;\n\n\tconstructor(r: number, g: number, b: number) {\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\t}\n\n\ttoString(): string {\n\t\treturn `rgb(${this.r}, ${this.g}, ${this.b})`;\n\t}\n}\n\nexport const createColor = (): RGBColor => {\n\tconst color = new Color(\n\t\tgetColor(),\n\t\tgetColor(),\n\t\tgetColor(),\n\t)\n};\n\nexport const createGameColors = (): {\n\tbase: RGBColor;\n\tanswer: RGBColor;\n} => {\n\treturn {\n\t\tbase: createColor(),\n\t\tanswer: createColor(),\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}