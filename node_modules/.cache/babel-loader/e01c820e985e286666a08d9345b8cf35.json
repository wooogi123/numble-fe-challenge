{"ast":null,"code":"var _jsxFileName = \"/Users/leejaeuk/Dev/playground/numble-1/src/features/game/Game.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { GameBoard, GameHeader, GamePlate, GameStart } from '../../components';\nimport useGame from './useGame';\nimport useRequestAnimationFrame from './useRequestAnimationFrame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  const [state, dispatch] = useGame();\n  const isStarted = React.useMemo(() => state.isStarted, [state]);\n  const isGameOver = React.useMemo(() => state.isGameOver, [state]);\n  const handleClickStart = React.useCallback(() => {\n    dispatch({\n      type: 'init'\n    });\n  }, [dispatch]);\n  const elapsedTime = React.useRef(0);\n  useRequestAnimationFrame(deltaTime => {\n    if (!isStarted) return;\n    if (isGameOver) return;\n    elapsedTime.current += deltaTime;\n\n    if (elapsedTime.current >= 100) {\n      elapsedTime.current = 0;\n      dispatch({\n        type: 'tick'\n      });\n    }\n  }, [isStarted, isGameOver]);\n\n  if (!isStarted) {\n    return /*#__PURE__*/_jsxDEV(GamePlate, {\n      children: /*#__PURE__*/_jsxDEV(GameStart, {\n        onClick: handleClickStart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(GamePlate, {\n    children: [/*#__PURE__*/_jsxDEV(GameHeader, {\n      isGameOver: isGameOver,\n      stage: state.stage,\n      time: state.remainingTime,\n      score: state.score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(GameBoard, {\n      stage: state.stage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Game, \"AVj76HZT7eXMIrkVXO0+Kfy+E38=\", false, function () {\n  return [useGame, useRequestAnimationFrame];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/leejaeuk/Dev/playground/numble-1/src/features/game/Game.tsx"],"names":["React","GameBoard","GameHeader","GamePlate","GameStart","useGame","useRequestAnimationFrame","Game","state","dispatch","isStarted","useMemo","isGameOver","handleClickStart","useCallback","type","elapsedTime","useRef","deltaTime","current","stage","remainingTime","score"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SACCC,SADD,EAECC,UAFD,EAGCC,SAHD,EAICC,SAJD,QAKO,kBALP;AAMA,OAAOC,OAAP,MAAqB,WAArB;AACA,OAAOC,wBAAP,MAAqC,4BAArC;;;AAEA,MAAMC,IAAc,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,OAAO,EAAjC;AAEA,QAAMK,SAAS,GAAGV,KAAK,CAACW,OAAN,CAAc,MAAMH,KAAK,CAACE,SAA1B,EAAqC,CAACF,KAAD,CAArC,CAAlB;AACA,QAAMI,UAAU,GAAGZ,KAAK,CAACW,OAAN,CAAc,MAAMH,KAAK,CAACI,UAA1B,EAAsC,CAACJ,KAAD,CAAtC,CAAnB;AAEA,QAAMK,gBAAgB,GAAGb,KAAK,CAACc,WAAN,CAAkB,MAAM;AAChDL,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,GAFwB,EAEtB,CAACN,QAAD,CAFsB,CAAzB;AAIA,QAAMO,WAAW,GAAGhB,KAAK,CAACiB,MAAN,CAAqB,CAArB,CAApB;AAEAX,EAAAA,wBAAwB,CAAEY,SAAD,IAAe;AACvC,QAAI,CAACR,SAAL,EAAgB;AAChB,QAAIE,UAAJ,EAAgB;AAEfI,IAAAA,WAAW,CAACG,OAAZ,IAAuBD,SAAvB;;AAED,QAAIF,WAAW,CAACG,OAAZ,IAAuB,GAA3B,EAAgC;AAC/BH,MAAAA,WAAW,CAACG,OAAZ,GAAsB,CAAtB;AACAV,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACA;AACD,GAVuB,EAUrB,CAACL,SAAD,EAAYE,UAAZ,CAVqB,CAAxB;;AAYA,MAAI,CAACF,SAAL,EAAgB;AACf,wBACC,QAAC,SAAD;AAAA,6BACC,QAAC,SAAD;AAAW,QAAA,OAAO,EAAEG;AAApB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAKA;;AAED,sBACC,QAAC,SAAD;AAAA,4BACC,QAAC,UAAD;AACC,MAAA,UAAU,EAAED,UADb;AAEC,MAAA,KAAK,EAAEJ,KAAK,CAACY,KAFd;AAGC,MAAA,IAAI,EAAEZ,KAAK,CAACa,aAHb;AAIC,MAAA,KAAK,EAAEb,KAAK,CAACc;AAJd;AAAA;AAAA;AAAA;AAAA,YADD,eAOC,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEd,KAAK,CAACY;AAAxB;AAAA;AAAA;AAAA;AAAA,YAPD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAWA,CA3CD;;GAAMb,I;UACqBF,O,EAW1BC,wB;;;KAZKC,I;AA6CN,eAAeA,IAAf","sourcesContent":["import * as React from 'react';\nimport { styled } from '../../stitches.config';\nimport {\n\tGameBoard,\n\tGameHeader,\n\tGamePlate,\n\tGameStart,\n} from '../../components';\nimport useGame  from './useGame';\nimport useRequestAnimationFrame from './useRequestAnimationFrame';\n\nconst Game: React.FC = () => {\n\tconst [state, dispatch] = useGame();\n\n\tconst isStarted = React.useMemo(() => state.isStarted, [state]);\n\tconst isGameOver = React.useMemo(() => state.isGameOver, [state]);\n\n\tconst handleClickStart = React.useCallback(() => {\n\t\tdispatch({ type: 'init' });\n\t}, [dispatch]);\n\n\tconst elapsedTime = React.useRef<number>(0);\n\n\tuseRequestAnimationFrame((deltaTime) => {\n\t\tif (!isStarted) return;\n\t\tif (isGameOver) return;\n\n  \telapsedTime.current += deltaTime;\n\n\t\tif (elapsedTime.current >= 100) {\n\t\t\telapsedTime.current = 0;\n\t\t\tdispatch({ type: 'tick' });\n\t\t}\n\t}, [isStarted, isGameOver]);\n\n\tif (!isStarted) {\n\t\treturn (\n\t\t\t<GamePlate>\n\t\t\t\t<GameStart onClick={handleClickStart} />\n\t\t\t</GamePlate>\n\t\t);\n\t}\n\n\treturn (\n\t\t<GamePlate>\n\t\t\t<GameHeader\n\t\t\t\tisGameOver={isGameOver}\n\t\t\t\tstage={state.stage}\n\t\t\t\ttime={state.remainingTime}\n\t\t\t\tscore={state.score}\n\t\t\t/>\n\t\t\t<GameBoard stage={state.stage} />\n\t\t</GamePlate>\n\t);\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}