{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport * as React from 'react';\n\nconst useRequestAnimationFrame = (callback, deps) => {\n  _s();\n\n  React.useEffect(() => {\n    let rAF;\n    let elapsed;\n\n    const animate = time => {\n      if (elapsed !== undefined) {\n        const deltaTime = time - elapsed;\n        callback(deltaTime);\n      }\n\n      elapsed = time;\n      rAF = window.requestAnimationFrame(animate);\n    };\n\n    rAF = window.requestAnimationFrame(animate);\n    return () => {\n      if (rAF) window.cancelAnimationFrame(rAF);\n    }; // eslint-disable-next-line\n  }, [callback, ...deps]);\n};\n\n_s(useRequestAnimationFrame, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport default useRequestAnimationFrame;","map":{"version":3,"sources":["/mnt/c/Users/Akalee/Desktop/work/playground/numble-fe-challenge/src/hooks/useRequestAnimationFrame.ts"],"names":["React","useRequestAnimationFrame","callback","deps","useEffect","rAF","elapsed","animate","time","undefined","deltaTime","window","requestAnimationFrame","cancelAnimationFrame"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAIA,MAAMC,wBAAwB,GAAG,CAACC,QAAD,EAAqBC,IAArB,KAAoD;AAAA;;AACnFH,EAAAA,KAAK,CAACI,SAAN,CAAgB,MAAM;AACpB,QAAIC,GAAJ;AACA,QAAIC,OAAJ;;AAEA,UAAMC,OAAO,GAAIC,IAAD,IAAkB;AAChC,UAAIF,OAAO,KAAKG,SAAhB,EAA2B;AACzB,cAAMC,SAAS,GAAGF,IAAI,GAAGF,OAAzB;AACAJ,QAAAA,QAAQ,CAACQ,SAAD,CAAR;AACD;;AAEDJ,MAAAA,OAAO,GAAGE,IAAV;AACAH,MAAAA,GAAG,GAAGM,MAAM,CAACC,qBAAP,CAA6BL,OAA7B,CAAN;AACD,KARD;;AAUAF,IAAAA,GAAG,GAAGM,MAAM,CAACC,qBAAP,CAA6BL,OAA7B,CAAN;AAEA,WAAO,MAAM;AACX,UAAIF,GAAJ,EAASM,MAAM,CAACE,oBAAP,CAA4BR,GAA5B;AACV,KAFD,CAhBoB,CAoBtB;AACC,GArBD,EAqBG,CAACH,QAAD,EAAW,GAAGC,IAAd,CArBH;AAsBD,CAvBD;;GAAMF,wB;;AAyBN,eAAeA,wBAAf","sourcesContent":["import * as React from 'react';\r\n\r\ntype Callback = (deltaTime: number) => void;\r\n\r\nconst useRequestAnimationFrame = (callback: Callback, deps: React.DependencyList) => {\r\n  React.useEffect(() => {\r\n    let rAF: number | undefined;\r\n    let elapsed: number | undefined;\r\n\r\n    const animate = (time: number) => {\r\n      if (elapsed !== undefined) {\r\n        const deltaTime = time - elapsed;\r\n        callback(deltaTime);\r\n      }\r\n\r\n      elapsed = time;\r\n      rAF = window.requestAnimationFrame(animate);\r\n    };\r\n\r\n    rAF = window.requestAnimationFrame(animate);\r\n\r\n    return () => {\r\n      if (rAF) window.cancelAnimationFrame(rAF);\r\n    };\r\n\r\n  // eslint-disable-next-line\r\n  }, [callback, ...deps]);\r\n};\r\n\r\nexport default useRequestAnimationFrame;\r\n"]},"metadata":{},"sourceType":"module"}