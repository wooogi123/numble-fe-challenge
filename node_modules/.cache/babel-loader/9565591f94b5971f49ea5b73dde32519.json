{"ast":null,"code":"var _jsxFileName = \"/Users/leejaeuk/Dev/playground/numble-1/src/components/GameBoard.tsx\";\nimport * as React from 'react';\nimport { styled } from '../stitches.config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GameBoard = _ref => {\n  let {\n    stage\n  } = _ref;\n  const count = Math.pow(Math.round((stage + 0.5) / 2) + 1, 2);\n  return /*#__PURE__*/_jsxDEV(Board, {\n    children: Array(count).fill(undefined).map((_, idx) => /*#__PURE__*/_jsxDEV(\"div\", {}, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n};\n\n_c = GameBoard;\nexport default GameBoard;\nconst Board = styled('div', {\n  width: '100%',\n  aspectRatio: '1/1',\n  display: 'grid'\n});\n_c2 = Board;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GameBoard\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"sources":["/Users/leejaeuk/Dev/playground/numble-1/src/components/GameBoard.tsx"],"names":["React","styled","GameBoard","stage","count","Math","pow","round","Array","fill","undefined","map","_","idx","Board","width","aspectRatio","display"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,oBAAvB;;;AAMA,MAAMC,SAAmC,GAAG,QAEtC;AAAA,MAFuC;AAC5CC,IAAAA;AAD4C,GAEvC;AACL,QAAMC,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,KAAL,CAAW,CAACJ,KAAK,GAAG,GAAT,IAAgB,CAA3B,IAAgC,CAAzC,EAA4C,CAA5C,CAAd;AAEA,sBACC,QAAC,KAAD;AAAA,cACEK,KAAK,CAACJ,KAAD,CAAL,CAAaK,IAAb,CAAkBC,SAAlB,EAA6BC,GAA7B,CAAiC,CAACC,CAAD,EAAIC,GAAJ,kBACjC,mBAAUA,GAAV;AAAA;AAAA;AAAA;AAAA,YADA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CAZD;;KAAMX,S;AAcN,eAAeA,SAAf;AAEA,MAAMY,KAAK,GAAGb,MAAM,CAAC,KAAD,EAAQ;AAC3Bc,EAAAA,KAAK,EAAE,MADoB;AAE3BC,EAAAA,WAAW,EAAE,KAFc;AAG3BC,EAAAA,OAAO,EAAE;AAHkB,CAAR,CAApB;MAAMH,K","sourcesContent":["import * as React from 'react';\nimport { styled } from '../stitches.config';\n\ninterface GameBoardProps {\n\tstage: number;\n}\n\nconst GameBoard: React.FC<GameBoardProps> = ({\n\tstage,\n}) => {\n\tconst count = Math.pow(Math.round((stage + 0.5) / 2) + 1, 2);\n\n\treturn (\n\t\t<Board>\n\t\t\t{Array(count).fill(undefined).map((_, idx) => (\n\t\t\t\t<div key={idx}></div>\n\t\t\t))}\n\t\t</Board>\n\t);\n};\n\nexport default GameBoard;\n\nconst Board = styled('div', {\n\twidth: '100%',\n\taspectRatio: '1/1',\n\tdisplay: 'grid',\n});\n"]},"metadata":{},"sourceType":"module"}