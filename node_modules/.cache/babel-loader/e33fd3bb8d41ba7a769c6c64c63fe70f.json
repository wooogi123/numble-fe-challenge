{"ast":null,"code":"var _jsxFileName = \"/Users/leejaeuk/Dev/playground/numble-1/src/components/GameHeader.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { styled } from '../stitches.config';\nimport { useRequestAnimationFrame } from '../hooks';\nimport GameOver from './GameOver';\nimport GameStatus from './GameStatus';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GameHeader = _ref => {\n  _s();\n\n  let {\n    isStarted,\n    isGameOver,\n    stage,\n    score,\n    onGameEnd\n  } = _ref;\n  const [remainingTime, setRemainingTime] = React.useState(15000);\n\n  const tick = () => setRemainingTime(prev => prev - 100);\n\n  const elapsedTime = React.useRef(0);\n  useRequestAnimationFrame(deltaTime => {\n    if (!isStarted) return;\n    elapsedTime.current += deltaTime;\n\n    if (elapsedTime.current >= 100) {\n      elapsedTime.current = 0;\n      tick();\n    }\n  }, [isStarted]);\n  React.useEffect(() => {\n    if (remainingTime >= 0) return;\n    onGameEnd();\n  }, [remainingTime]);\n  return /*#__PURE__*/_jsxDEV(Header, {\n    justify: isGameOver ? 'center' : 'space-between',\n    children: isGameOver ? /*#__PURE__*/_jsxDEV(GameOver, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(GameStatus, {\n      stage: stage,\n      score: score,\n      time: remainingTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GameHeader, \"56GRNwBwc1GLDNR6WiIOWq34KWM=\", false, function () {\n  return [useRequestAnimationFrame];\n});\n\n_c = GameHeader;\nexport default GameHeader;\nconst Header = styled('div', {\n  width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  minHeight: 44.8,\n  variants: {\n    justify: {\n      'center': {\n        justifyContent: 'center'\n      },\n      'space-between': {\n        justifyContent: 'space-between'\n      }\n    }\n  }\n});\n_c2 = Header;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GameHeader\");\n$RefreshReg$(_c2, \"Header\");","map":{"version":3,"sources":["/Users/leejaeuk/Dev/playground/numble-1/src/components/GameHeader.tsx"],"names":["React","styled","useRequestAnimationFrame","GameOver","GameStatus","GameHeader","isStarted","isGameOver","stage","score","onGameEnd","remainingTime","setRemainingTime","useState","tick","prev","elapsedTime","useRef","deltaTime","current","useEffect","Header","width","display","alignItems","minHeight","variants","justify","justifyContent"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAWA,MAAMC,UAAqC,GAAG,QAMxC;AAAA;;AAAA,MANyC;AAC7CC,IAAAA,SAD6C;AAE7CC,IAAAA,UAF6C;AAG7CC,IAAAA,KAH6C;AAI7CC,IAAAA,KAJ6C;AAK7CC,IAAAA;AAL6C,GAMzC;AACJ,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCZ,KAAK,CAACa,QAAN,CAAuB,KAAvB,CAA1C;;AACA,QAAMC,IAAI,GAAG,MAAMF,gBAAgB,CAAEG,IAAD,IAAUA,IAAI,GAAG,GAAlB,CAAnC;;AAEA,QAAMC,WAAW,GAAGhB,KAAK,CAACiB,MAAN,CAAqB,CAArB,CAApB;AAEAf,EAAAA,wBAAwB,CAAEgB,SAAD,IAAe;AACtC,QAAI,CAACZ,SAAL,EAAgB;AAEhBU,IAAAA,WAAW,CAACG,OAAZ,IAAuBD,SAAvB;;AAEA,QAAIF,WAAW,CAACG,OAAZ,IAAuB,GAA3B,EAAgC;AAC9BH,MAAAA,WAAW,CAACG,OAAZ,GAAsB,CAAtB;AACAL,MAAAA,IAAI;AACL;AACF,GATuB,EASrB,CAACR,SAAD,CATqB,CAAxB;AAWAN,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpB,QAAIT,aAAa,IAAI,CAArB,EAAwB;AACxBD,IAAAA,SAAS;AACV,GAHD,EAGG,CAACC,aAAD,CAHH;AAKA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEJ,UAAU,GAAG,QAAH,GAAc,eAAzC;AAAA,cACGA,UAAU,gBACT,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADS,gBAGT,QAAC,UAAD;AACE,MAAA,KAAK,EAAEC,KADT;AAEE,MAAA,KAAK,EAAEC,KAFT;AAGE,MAAA,IAAI,EAAEE;AAHR;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAzCD;;GAAMN,U;UAYJH,wB;;;KAZIG,U;AA2CN,eAAeA,UAAf;AAEA,MAAMgB,MAAM,GAAGpB,MAAM,CAAC,KAAD,EAAQ;AAC3BqB,EAAAA,KAAK,EAAE,MADoB;AAE3BC,EAAAA,OAAO,EAAE,MAFkB;AAG3BC,EAAAA,UAAU,EAAE,QAHe;AAI3BC,EAAAA,SAAS,EAAE,IAJgB;AAK3BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE;AACP,gBAAU;AACRC,QAAAA,cAAc,EAAE;AADR,OADH;AAIP,uBAAiB;AACfA,QAAAA,cAAc,EAAE;AADD;AAJV;AADD;AALiB,CAAR,CAArB;MAAMP,M","sourcesContent":["import * as React from 'react';\nimport { styled } from '../stitches.config';\nimport { useRequestAnimationFrame } from '../hooks';\nimport GameOver from './GameOver';\nimport GameStatus from './GameStatus';\n\ninterface GameHeaderProps {\n  isStarted: boolean;\n  isGameOver: boolean;\n  stage: number;\n  time?: number;\n  score: number;\n  onGameEnd: () => void;\n}\n\nconst GameHeader: React.FC<GameHeaderProps> = ({\n  isStarted,\n  isGameOver,\n  stage,\n  score,\n  onGameEnd,\n}) => {\n  const [remainingTime, setRemainingTime] = React.useState<number>(15000);\n  const tick = () => setRemainingTime((prev) => prev - 100);\n\n  const elapsedTime = React.useRef<number>(0);\n\n  useRequestAnimationFrame((deltaTime) => {\n    if (!isStarted) return;\n\n    elapsedTime.current += deltaTime;\n\n    if (elapsedTime.current >= 100) {\n      elapsedTime.current = 0;\n      tick();\n    }\n  }, [isStarted]);\n\n  React.useEffect(() => {\n    if (remainingTime >= 0) return;\n    onGameEnd();\n  }, [remainingTime]);\n\n  return (\n    <Header justify={isGameOver ? 'center' : 'space-between'}>\n      {isGameOver ? (\n        <GameOver />\n      ) : (\n        <GameStatus\n          stage={stage}\n          score={score}\n          time={remainingTime}\n        />\n      )}\n    </Header>\n  );\n};\n\nexport default GameHeader;\n\nconst Header = styled('div', {\n  width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  minHeight: 44.8,\n  variants: {\n    justify: {\n      'center': {\n        justifyContent: 'center',\n      },\n      'space-between': {\n        justifyContent: 'space-between',\n      },\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}